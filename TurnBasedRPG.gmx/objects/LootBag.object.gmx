<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprLootBag</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
show_loot = false;
lootpos = 0;

for(i = 0; i &lt; 5; i++)
{
    loot[i, 1] = choose(irandom(9), 21 + irandom(4));;
    switch(loot[i, 1])
        {
            case 0:
                loot[i, 0] = "Przedmiot";
                break;
            case 1:
                loot[i, 0] = "Miecz dlugi";
                loot[i, 2] = 80 + irandom(40);
                loot[i, 3] = 80 + irandom(40);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 2:
                loot[i, 0] = "Topor";
                loot[i, 2] = 80 + irandom(40);
                loot[i, 3] = 80 + irandom(40);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 3:
                loot[i, 0] = "Miecz";
                loot[i, 2] = 60 + irandom(30);
                loot[i, 3] = 60 + irandom(30);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 4:
                loot[i, 0] = "Siekiera";
                loot[i, 2] = 60 + irandom(30);
                loot[i, 3] = 60 + irandom(30);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 5:
                loot[i, 0] = "Sztylet";
                loot[i, 2] = 60 + irandom(30);
                loot[i, 3] = 60 + irandom(30);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 6:
                loot[i, 0] = "Luk";
                loot[i, 2] = 80 + irandom(40);
                loot[i, 3] = 80 + irandom(40);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 7:
                loot[i, 0] = "Kusza";
                loot[i, 2] = 80 + irandom(40);
                loot[i, 3] = 80 + irandom(40);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 8:
                loot[i, 0] = "Pistolet";
                loot[i, 2] = 60 + irandom(30);
                loot[i, 3] = 60 + irandom(30);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 9:
                loot[i, 0] = "Glawia";
                loot[i, 2] = 60 + irandom(30);
                loot[i, 3] = 60 + irandom(30);
                loot[i, 4] = 0.8 + random(0.4);
                loot[i, 5] = irandom(2);
                break;
            case 21:
                loot[i, 0] = "Helm";
                loot[i, 2] = 15 + irandom(15);
                loot[i, 3] = 15 + irandom(15);
                loot[i, 4] = 0.02 + random(0.03);
                loot[i, 5] = irandom(2);
                break;
            case 22:
                loot[i, 0] = "Zbroja";
                loot[i, 2] = 30 + irandom(20);
                loot[i, 3] = 30 + irandom(20);
                loot[i, 4] = 0.05 + random(0.05);
                loot[i, 5] = irandom(2);
                break;
            case 23:
                loot[i, 0] = "Spodnie";
                loot[i, 2] = 30 + irandom(20);
                loot[i, 3] = 30 + irandom(20);
                loot[i, 4] = 0.05 + random(0.05);
                loot[i, 5] = irandom(2);
                break;
            case 24:
                loot[i, 0] = "Rekawice";
                loot[i, 2] = 15 + irandom(15);
                loot[i, 3] = 15 + irandom(15);
                loot[i, 4] = 0.02 + random(0.03);
                loot[i, 5] = irandom(2);
                break;
            case 25:
                loot[i, 0] = "Buty";
                loot[i, 2] = 15 + irandom(15);
                loot[i, 3] = 15 + irandom(15);
                loot[i, 4] = 0.02 + random(0.03);
                loot[i, 5] = irandom(2);
                break;
            default:
                loot[i, 0] = "Blad";
        }
}

lootAmount = array_height_2d(loot);

for(i = 0; i &lt; lootAmount; i++)
{
    loot_mouseover[i] = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(mouse_check_button_pressed(mb_right))
{
    show_loot = false;
}

if(lootAmount &lt;= 0)
{
    Ctrl.show_loot = false;
    instance_destroy();
}

if(lootAmount &gt; 0 &amp;&amp; show_loot)
{
    Ctrl.show_loot = true;
    
    if(mouse_x &gt;= x + 24 &amp;&amp; mouse_x &lt;= x + 48)
    {
        if(mouse_y &gt;= y - 104 &amp;&amp; mouse_y &lt;= y - 80) loot_up_mouseover = true;
        else loot_up_mouseover = false;
        
        if(mouse_y &gt;= y + 80 &amp;&amp; mouse_y &lt;= y + 104) loot_down_mouseover = true;
        else loot_down_mouseover = false;
    }
    else
    {
        loot_up_mouseover = false;
        loot_down_mouseover = false;
    }
    
    if(mouse_x &gt;= x - 48 &amp;&amp; mouse_x &lt;= x + 16)
    {
        for(i = 0; i &lt; 3; i++)
        {
            if(mouse_y &gt;= y - 104 + i * 72 &amp;&amp; mouse_y &lt;= y - 104 + i * 72 + 64)
            {
                if(i + lootpos &lt; lootAmount) loot_mouseover[i + lootpos] = true;
            }
            else loot_mouseover[i + lootpos] = false;
        }
    }
    else
    {
        for(i = 0; i &lt; lootAmount; i++)
        {
            loot_mouseover[i + lootpos] = false;
        }
    }
    
    if(mouse_check_button_pressed(mb_left))
    {
        if(mouse_x &lt; x - 56 || mouse_x &gt; x + 56 || mouse_y &lt; y - 112 || mouse_y &gt; y + 112)
        {
            show_loot = false;
            Ctrl.show_loot = false;
        }
        
        if(loot_up_mouseover)
        {
            if(lootpos != 0) lootpos -= 3;
        }
        
        if(loot_down_mouseover)
        {
            if(lootpos + 3 &lt;= lootAmount) lootpos += 3;
        }
        
        for(i = 0; i &lt; lootAmount; i++)
        {
            if(loot_mouseover[i])
            {
                for(j = 0; j &lt; 24; j++)
                {
                    if(InvCtrl.inv[j, 1] == -1)
                    {
                        for(k = 0; k &lt; 6; k++)
                        {
                            InvCtrl.inv[j, k] = loot[i, k];
                        }
                        for(l = i; l &lt; lootAmount - 1; l++)
                        {
                            for(m = 0; m &lt; 6; m++)
                            {
                                loot[l, m] = loot[l + 1, m];
                            }
                        }
                        lootAmount --;
                        if(lootpos &gt;= lootAmount) lootpos -= 3;
                        break;
                    }
                    //if(j == 23) room_restart();
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!show_loot)
{
    near = instance_nearest(x, y, Hero);
    if(sqrt((x - near.x)*(x - near.x) + 4*(y - near.y)*(y - near.y)) &lt; 80) show_loot = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(show_loot &amp;&amp; lootAmount &gt; 0)
{
    draw_set_alpha(0.5);
    draw_set_colour(c_black);
    draw_rectangle(x - view_xview - 56, y - view_yview - 112, x - view_xview + 56, y - view_yview + 112, false);
    draw_set_alpha(1);
    
    for(i = lootpos; i &lt; lootpos + 3; i++)
    {
        if(i &lt; lootAmount)
        {
            //draw_sprite(sprItemIcon, loot[i, 5], x - view_xview - 48, y - view_yview - 104 + (i - lootpos) * 72);
            if(loot[i, 1] == 0) draw_sprite(sprItemIcon, loot[i, 5], x - view_xview - 48, y - view_yview - 104 + (i - lootpos) * 72);
            if(loot[i, 1] &gt;= 1 &amp;&amp; loot[i, 1] &lt;= 9) draw_sprite(sprWeaponIcon, -1 + loot[i, 1], x - view_xview - 48, y - view_yview - 104 + (i - lootpos) * 72);
            if(loot[i, 1] &gt;= 21 &amp;&amp; loot[i, 1] &lt;= 25) draw_sprite(sprArmorIcon, -21 + loot[i, 1], x - view_xview - 48, y - view_yview - 104 + (i - lootpos) * 72);
        }
    }
    
    if(lootAmount &gt; 3)
    {
        draw_sprite(sprArrowSmall, 1, x - view_xview + 24, y - view_yview - 104);
        draw_sprite(sprArrowSmall, 3, x - view_xview + 24, y - view_yview + 80);
    }
    draw_text(x - view_xview + 24, y - view_yview, string(lootAmount));
    
    for(i = 0; i &lt; lootAmount; i ++)
    {
        if(loot_mouseover[i])
        {
            draw_set_alpha(0.5);
            draw_rectangle(mouse_x + 4 - view_xview, mouse_y - 4 - 96 - view_yview, mouse_x + 4 + 288 - view_xview, mouse_y - 4 - view_yview, false);
            draw_set_alpha(1);
            draw_set_colour(c_gray);
            draw_rectangle(mouse_x + 4 - view_xview, mouse_y - 4 - 96 - view_yview, mouse_x + 4 + 288 - view_xview, mouse_y - 4 - view_yview, true);
            draw_set_colour(c_orange);
            draw_text(mouse_x + 8 - view_xview, mouse_y - 96 - view_yview, string(loot[i, 0]));
            draw_set_colour(c_white);
            
            switch(loot[i, 1])
            {
                /*
                0 - inne - nie do ubrania
        
                1 - miecz 2h
                2 - miecz 1h
                3 - topor 2h
                4 - siekiera 1h
                5 - sztylet 1h
                6 - luk 2h
                7 - kusza 2h
                8 - pistolet 1h
                9 - glawia 1h
                
                21 - helm
                22 - zbroja
                23 - spodnie
                24 - rekawice
                25 - buty
                */
                
                case 0:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Przedmiot");
                    break;
                case 1:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Miecz dlugi");
                    break;
                case 2:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Miecz krotki");
                    break;
                case 3:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Topor");
                    break;
                case 4:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Siekiera");
                    break;
                case 5:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Sztylet");
                    break;
                case 6:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Luk");
                    break;
                case 7:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Kusza");
                    break;
                case 8:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Pistolet");
                    break;
                case 9:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Glawia");
                    break;
                case 21:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Helm");
                    break;
                case 22:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Zbroja");
                    break;
                case 23:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Spodnie");
                    break;
                case 24:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Rekawice");
                    break;
                case 25:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Buty");
                    break;
                default:
                    draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 16 - view_yview, "Nieznane");
            }
            
            draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 32 - view_yview, "Atak: " + string(loot[i, 2]));
            draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 48 - view_yview, "DoT: " + string(loot[i, 3]));
            draw_text(mouse_x + 8 - view_xview, mouse_y - 96 + 64 - view_yview, "Szybkosc: " + string(loot[i, 4]));
            draw_set_colour(c_black);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
