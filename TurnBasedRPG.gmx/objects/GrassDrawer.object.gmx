<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grass_dist = 120;
xx = 0;

if(Ctrl.grass_density == 1) grass_dist = 120;
if(Ctrl.grass_density == 2) grass_dist = 100;
if(Ctrl.grass_density == 3) grass_dist = 80;
if(Ctrl.grass_density == 4) grass_dist = 60;
if(Ctrl.grass_density == 5) grass_dist = 40;

if(y%32 == 0) pos_shift = grass_dist/2;
else pos_shift = 0;

grass_curve = 0;
check_grass = false;

depth = -y;


//if instance_position(i, y, GrassTile) ???

j = 0;
for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
{
    if(place_free(i, y) &amp;&amp; !instance_position(i, y, Dirt) &amp;&amp; !instance_position(i, y, Water))
    {
        grass[j] = 1;
        if(place_free(i + grass_dist, y) &amp;&amp; !instance_position(i + grass_dist, y, Dirt) &amp;&amp; !instance_position(i, y, Water))
        {
            grass[j] = 2;
            if(place_free(i + 2*grass_dist, y) &amp;&amp; !instance_position(i + 2*grass_dist, y, Dirt) &amp;&amp; !instance_position(i, y, Water) &amp;&amp; place_free(i + 3*grass_dist, y) &amp;&amp; !instance_position(i + 3*grass_dist, y, Dirt))
            {
                grass[j] = 4;
            }
        }
    }
    else grass[j] = 0;
    j++;
}

for(i = 0; i &lt; 120; i++)
{
    xxa[i] = 5*sin(degtorad(y%360 + i*3)) + 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Ctrl.grass_density == 1) grass_dist = 120;
if(Ctrl.grass_density == 2) grass_dist = 100;
if(Ctrl.grass_density == 3) grass_dist = 80;
if(Ctrl.grass_density == 4) grass_dist = 60;
if(Ctrl.grass_density == 5) grass_dist = 40;

if(y%32 == 0) pos_shift = grass_dist/2;
else pos_shift = 0;

if(Ctrl.grass_sway)
{
    //grass_curve += 3;
    //if(grass_curve &gt; 360) grass_curve -= 360;
    //xx = 5*sin(degtorad(grass_curve)) + 4;
    xx = xxa[grass_curve];
    grass_curve++;
    if(grass_curve &gt;= 120) grass_curve = 0;
}

if(check_grass)
{
    j = 0;
    for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
    {
        if(place_free(i, y) &amp;&amp; !instance_position(i, y, Dirt))
        {
            grass[j] = 1;
            if(place_free(i + grass_dist, y) &amp;&amp; !instance_position(i + grass_dist, y, Dirt))
            {
                grass[j] = 2;
                if(place_free(i + 2*grass_dist, y) &amp;&amp; !instance_position(i + 2*grass_dist, y, Dirt) &amp;&amp; place_free(i + 3*grass_dist, y) &amp;&amp; !instance_position(i + 3*grass_dist, y, Dirt))
                {
                    grass[j] = 4;
                }
            }
        }
        else grass[j] = 0;
        j++;
    }
    check_grass = false;
}
/*
if(check_grass)
{
    j = 0;
    for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
    {
        if(place_free(i, y) &amp;&amp; !instance_position(i, y, Dirt)) grass[j] = true;
        else grass[j] = false;
        j++;
    }
    check_grass = false;
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Ctrl.grass_density == 5)
{
    if(y &gt;= view_yview - 24 &amp;&amp; y &lt;= view_yview + view_hview + 24)
    {
        j = 0;
        
        for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
        {
            if(j &lt; array_length_1d(grass))
            {
                if(grass[j] == 1)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass, 0, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass, 1, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass, 1, i - 24 + xx + 12, y + 28, i + 24 + xx + 12, y + 28, i + 24, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                }
                else if(grass[j] == 2)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass52, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass52, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass52, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass52, 0, i - 24 + xx, y - 28, i + 24 + 40 + xx, y - 28, i + 24 + 40, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass52, 1, i - 24 + xx, y - 28, i + 24 + 40 + xx, y - 28, i + 24 + 40, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass52, 1, i - 24 + xx + 12, y + 28, i + 24 + 40 + xx + 12, y + 28, i + 24 + 40, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j++;
                    i += grass_dist
                }
                else if(grass[j] == 4)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass54, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass54, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass54, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass54, 0, i - 24 + xx, y - 28, i + 24 + 120 + xx, y - 28, i + 24 + 120, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass54, 1, i - 24 + xx, y - 28, i + 24 + 120 + xx, y - 28, i + 24 + 120, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass54, 1, i - 24 + xx + 12, y + 28, i + 24 + 120 + xx + 12, y + 28, i + 24 + 120, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j += 3;
                    i += 3*grass_dist
                }
                j++;
            }
        }
    }
}
else if(Ctrl.grass_density == 4)
{
    if(y &gt;= view_yview - 24 &amp;&amp; y &lt;= view_yview + view_hview + 24)
    {
        j = 0;
        
        for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
        {
            if(j &lt; array_length_1d(grass))
            {
                if(grass[j] == 1)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass, 0, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass, 1, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass, 1, i - 24 + xx + 12, y + 28, i + 24 + xx + 12, y + 28, i + 24, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                }
                else if(grass[j] == 2)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass42, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass42, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass42, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass42, 0, i - 24 + xx, y - 28, i + 24 + 60 + xx, y - 28, i + 24 + 60, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass42, 1, i - 24 + xx, y - 28, i + 24 + 60 + xx, y - 28, i + 24 + 60, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass42, 1, i - 24 + xx + 12, y + 28, i + 24 + 60 + xx + 12, y + 28, i + 24 + 60, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j++;
                    i += grass_dist
                }
                else if(grass[j] == 4)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass44, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass44, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass44, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass44, 0, i - 24 + xx, y - 28, i + 24 + 180 + xx, y - 28, i + 24 + 180, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass44, 1, i - 24 + xx, y - 28, i + 24 + 180 + xx, y - 28, i + 24 + 180, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass44, 1, i - 24 + xx + 12, y + 28, i + 24 + 180 + xx + 12, y + 28, i + 24 + 180, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j += 3;
                    i += 3*grass_dist
                }
                j++;
            }
        }
    }
}
else if(Ctrl.grass_density == 3)
{
    if(y &gt;= view_yview - 24 &amp;&amp; y &lt;= view_yview + view_hview + 24)
    {
        j = 0;
        
        for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
        {
            if(j &lt; array_length_1d(grass))
            {
                if(grass[j] == 1)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass, 0, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass, 1, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass, 1, i - 24 + xx + 12, y + 28, i + 24 + xx + 12, y + 28, i + 24, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                }
                else if(grass[j] == 2)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass32, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass32, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass32, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass32, 0, i - 24 + xx, y - 28, i + 24 + 80 + xx, y - 28, i + 24 + 80, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass32, 1, i - 24 + xx, y - 28, i + 24 + 80 + xx, y - 28, i + 24 + 80, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass32, 1, i - 24 + xx + 12, y + 28, i + 24 + 80 + xx + 12, y + 28, i + 24 + 80, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j++;
                    i += grass_dist
                }
                else if(grass[j] == 4)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass34, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass34, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass34, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass34, 0, i - 24 + xx, y - 28, i + 24 + 240 + xx, y - 28, i + 24 + 240, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass34, 1, i - 24 + xx, y - 28, i + 24 + 240 + xx, y - 28, i + 24 + 240, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass34, 1, i - 24 + xx + 12, y + 28, i + 24 + 240 + xx + 12, y + 28, i + 24 + 240, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j += 3;
                    i += 3*grass_dist
                }
                j++;
            }
        }
    }
}
else if(Ctrl.grass_density == 2)
{
    if(y &gt;= view_yview - 24 &amp;&amp; y &lt;= view_yview + view_hview + 24)
    {
        j = 0;
        
        for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
        {
            if(j &lt; array_length_1d(grass))
            {
                if(grass[j] == 1)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass, 0, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass, 1, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass, 1, i - 24 + xx + 12, y + 28, i + 24 + xx + 12, y + 28, i + 24, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                }
                else if(grass[j] == 2)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass22, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass22, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass22, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass22, 0, i - 24 + xx, y - 28, i + 24 + 100 + xx, y - 28, i + 24 + 100, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass22, 1, i - 24 + xx, y - 28, i + 24 + 100 + xx, y - 28, i + 24 + 100, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass22, 1, i - 24 + xx + 12, y + 28, i + 24 + 100 + xx + 12, y + 28, i + 24 + 100, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j++;
                    i += grass_dist
                }
                else if(grass[j] == 4)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass24, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass24, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass24, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass24, 0, i - 24 + xx, y - 28, i + 24 + 300 + xx, y - 28, i + 24 + 300, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass24, 1, i - 24 + xx, y - 28, i + 24 + 300 + xx, y - 28, i + 24 + 300, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass24, 1, i - 24 + xx + 12, y + 28, i + 24 + 300 + xx + 12, y + 28, i + 24 + 300, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j += 3;
                    i += 3*grass_dist
                }
                j++;
            }
        }
    }
}
else if(Ctrl.grass_density == 1)
{
    if(y &gt;= view_yview - 24 &amp;&amp; y &lt;= view_yview + view_hview + 24)
    {
        j = 0;
        
        for(i = pos_shift - grass_dist/2; i &lt;= room_width; i += grass_dist)
        {
            if(j &lt; array_length_1d(grass))
            {
                if(grass[j] == 1)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass, 0, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass, 1, i - 24 + xx, y - 28, i + 24 + xx, y - 28, i + 24, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass, 1, i - 24 + xx + 12, y + 28, i + 24 + xx + 12, y + 28, i + 24, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                }
                else if(grass[j] == 2)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass12, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass12, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass12, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass12, 0, i - 24 + xx, y - 28, i + 24 + 120 + xx, y - 28, i + 24 + 120, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass12, 1, i - 24 + xx, y - 28, i + 24 + 120 + xx, y - 28, i + 24 + 120, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass12, 1, i - 24 + xx + 12, y + 28, i + 24 + 120 + xx + 12, y + 28, i + 24 + 120, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j++;
                    i += grass_dist
                }
                else if(grass[j] == 4)
                {
                    if(!Ctrl.grass_sway)
                    {
                        draw_sprite(sprGrass14, 0, i, y);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_ext(sprGrass14, 1, i, y, 1, 1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_ext(sprGrass14, 1, i, y, 1, -1, 0, image_blend, 0.1+Ctrl.sunlight*0.6);
                    }
                    else
                    {
                        draw_sprite_pos(sprGrass14, 0, i - 24 + xx, y - 28, i + 24 + 360 + xx, y - 28, i + 24 + 360, y + 4, i - 24, y + 4, 1);
                        if(instance_position(i, y, TreeShadow)) draw_sprite_pos(sprGrass14, 1, i - 24 + xx, y - 28, i + 24 + 360 + xx, y - 28, i + 24 + 360, y + 4, i - 24, y + 4, 0.1+Ctrl.sunlight*0.6);
                        else draw_sprite_pos(sprGrass14, 1, i - 24 + xx + 12, y + 28, i + 24 + 360 + xx + 12, y + 28, i + 24 + 360, y - 4, i - 24, y - 4, 0.1+Ctrl.sunlight*0.6);
                    }
                    j += 3;
                    i += 3*grass_dist
                }
                j++;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
