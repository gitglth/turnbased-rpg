<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprController</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = surface_create(view_wview,view_hview);
sprite_index = sprBlank;

time = 0;
/*
for(i = 0; i &lt; 200; i++)
{
    star[i, 0] = irandom(view_wview);
    star[i, 1] = irandom(view_hview);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y-2000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!surface_exists(surf)) surf = surface_create(view_wview,view_hview);

surface_set_target(surf);
draw_clear(make_colour_rgb(0, 0, 20));
draw_set_blend_mode(bm_src_colour);

for(i=0;i&lt;instance_number(LightFlicker);i++)
{
    current=instance_find(LightFlicker,i);
    draw_sprite_ext(sprLight,0,current.x-view_xview-4+random(8),current.y-view_yview-2+random(4),1-0.1+random(0.2),0.5-0.025+random(0.05),0,image_blend,0.9);
}

for(i=0;i&lt;instance_number(Light);i++)
{
    current=instance_find(Light,i);
    draw_sprite_ext(sprLight,0,current.x-view_xview,current.y-view_yview,1,0.5,0,image_blend,0.9);
}

surface_reset_target();
draw_set_blend_mode(bm_normal);
draw_surface_ext(surf,view_xview,view_yview,1,1,0,image_blend, (0.8 - (Ctrl.sunlight * (1 - Ctrl.overcast * 0.4) * 0.8)));

for(i=0;i&lt;instance_number(LightFlicker);i++)
{
    current=instance_find(LightFlicker,i);
    draw_sprite_ext(sprLight,0,current.x-view_xview-4+random(8),current.y-view_yview-2+random(4),1-0.1+random(0.2),0.5-0.025+random(0.05),0,c_orange,0.2);
}

for(i=0;i&lt;instance_number(Light);i++)
{
    current=instance_find(Light,i);
    draw_sprite_ext(sprLight,0,current.x-view_xview,current.y-view_yview,1,0.5,0,c_orange,0.2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
