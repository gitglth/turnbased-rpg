<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprNoticeBoard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y;
image_speed = 0;
randomize();
messages = irandom(20);
current_message = 0;

if(messages &gt; 0)
{
    if(messages &gt;= 1 &amp;&amp; messages &lt;= 5) messages = 1;
    if(messages &gt;= 6 &amp;&amp; messages &lt;= 10) messages = 2;
    if(messages &gt;= 11 &amp;&amp; messages &lt;= 14) messages = 3;
    if(messages &gt;= 15 &amp;&amp; messages &lt;= 17) messages = 4;
    if(messages &gt;= 18 &amp;&amp; messages &lt;= 19) messages = 5;
    if(messages == 20) messages = 6;
}
else messages = 0;

show_quests = false;

/*
    0 - grupa (EnemySpawner id)
    1 - nagroda
    2 - zlecajacy NPC id
*/

for(i = 0; i &lt; messages; i++)
{
    message[i, 0] = instance_find(EnemySpawner, irandom(instance_number(EnemySpawner)) - 1);
    message[i, 1] = 20 + irandom(40);
    message[i, 2] = instance_find(Npc, irandom(instance_number(Npc)) - 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(messages &lt;= 0) show_quests = false;

if(show_quests)
{
    if(mouse_y &gt;= view_hview / 2 - 100 + 8 &amp;&amp; mouse_y &lt;= view_hview / 2 - 100 + 32)
    {
        if(mouse_x &gt;= view_wview / 2 - 200 + 8 &amp;&amp; mouse_x &lt;= view_wview / 2 - 200 + 32) prev_mouseover = true;
        else prev_mouseover = false;
        if(mouse_x &gt;= view_wview / 2 - 200 + 48 &amp;&amp; mouse_x &lt;= view_wview / 2 + 200 - 48) accept_mouseover = true;
        else accept_mouseover = false;
        if(mouse_x &gt;= view_wview / 2 + 200 - 32 &amp;&amp; mouse_x &lt;= view_wview / 2 + 200 - 8) next_mouseover = true;
        else next_mouseover = false;
    }
    else
    {
        prev_mouseover = false;
        accept_mouseover = false;
        next_mouseover = false;
    }
    
    if(mouse_check_button_pressed(mb_left))
    {
        if(prev_mouseover)
        {
            current_message --;
            if(current_message &lt; 0) current_message += messages;
        }
        if(next_mouseover)
        {
            current_message ++;
            if(current_message &gt;= messages) current_message -= messages;
        }
        if(accept_mouseover)
        {
            if(InvCtrl.quests &lt; 8)
            {
                InvCtrl.quest[InvCtrl.quests, 0] = message[current_message, 0];
                InvCtrl.quest[InvCtrl.quests, 1] = message[current_message, 1];
                InvCtrl.quest[InvCtrl.quests, 2] = message[current_message, 2];
                InvCtrl.quest[InvCtrl.quests, 3] = 1;
                
                for(i = current_message + 1; i &lt; messages; i++)
                {
                    message[i - 1, 0] = message[i, 0];
                    message[i - 1, 1] = message[i, 1];
                    message[i - 1, 2] = message[i, 2];
                }
                messages --;
                InvCtrl.quests ++;
            }
        }
        
        if(mouse_x &lt; view_xview + view_wview / 2 - 200 || mouse_x &gt; view_xview + view_wview / 2 + 200 || mouse_y &lt; view_yview + view_hview / 2 - 100 || mouse_y &gt; view_yview + view_hview / 2 + 100) show_quests = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!show_quests &amp;&amp; messages &gt; 0)
{
    near = instance_nearest(x, y, Hero);
    if(sqrt((x - near.x)*(x - near.x) + 4*(y - near.y)*(y - near.y)) &lt; 80) show_quests = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="75">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(show_quests)
{
    draw_set_alpha(0.5);
    draw_set_colour(c_black);
    draw_rectangle(view_wview / 2 - 200, view_hview / 2 - 100, view_wview / 2 + 200, view_hview / 2 + 100, false);
    draw_set_alpha(1);
    draw_sprite(sprArrowSmall, 2, view_wview / 2 - 200 + 8, view_hview / 2 - 100 + 8);
    draw_rectangle_colour(view_wview / 2 - 200 + 48, view_hview / 2 - 100 + 8, view_wview / 2 + 200 - 48, view_hview / 2 - 100 + 8 + 24, c_gray, c_gray, c_gray, c_gray, false);
    draw_set_halign(fa_center);
    draw_text(view_wview / 2, view_hview / 2 - 100 + 12, "Przyjmij zlecenie");
    draw_sprite(sprArrowSmall, 0, view_wview / 2 + 200 - 8 - 24, view_hview / 2 - 100 + 8);
    draw_set_colour(c_white);
    draw_text_ext(view_wview / 2, view_hview / 2 - 100 + 40, "Potrzebna osoba do eksterminacji potworow w okolicy.##Nagroda: " + string(message[current_message, 1])
        + " sztuk zlota.##Zleceniodawca: " + string((message[current_message, 2]).name), 12, 384);
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

switch(messages)
{
    case 1:
        draw_sprite(sprite_index, 1, x, y - 52);
        break;
    case 2:
        draw_sprite(sprite_index, 1, x - 20, y - 52);
        draw_sprite(sprite_index, 1, x + 20, y - 52);
        break;
    case 3:
        draw_sprite(sprite_index, 1, x - 30, y - 52);
        draw_sprite(sprite_index, 1, x, y - 52);
        draw_sprite(sprite_index, 1, x + 30, y - 52);
        break;
    case 4:
        draw_sprite(sprite_index, 1, x - 20, y - 67);
        draw_sprite(sprite_index, 1, x + 20, y - 67);
        draw_sprite(sprite_index, 1, x - 20, y - 37);
        draw_sprite(sprite_index, 1, x + 20, y - 37);
        break;
    case 5:
        draw_sprite(sprite_index, 1, x - 30, y - 67);
        draw_sprite(sprite_index, 1, x, y - 67);
        draw_sprite(sprite_index, 1, x + 30, y - 67);
        draw_sprite(sprite_index, 1, x - 20, y - 37);
        draw_sprite(sprite_index, 1, x + 20, y - 37);
        break;
    case 6:
        draw_sprite(sprite_index, 1, x - 30, y - 67);
        draw_sprite(sprite_index, 1, x, y - 67);
        draw_sprite(sprite_index, 1, x + 30, y - 67);
        draw_sprite(sprite_index, 1, x - 30, y - 37);
        draw_sprite(sprite_index, 1, x, y - 37);
        draw_sprite(sprite_index, 1, x + 30, y - 37);
        break;
    default:
        draw_self();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
