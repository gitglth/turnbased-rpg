<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprController</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surf = surface_create(view_wview , view_hview);
surfMask = surface_create(view_wview , view_hview);
surfHelper = surface_create(view_wview , view_hview);
surfStraight = surface_create(view_wview , view_hview);

for(i = 0; i &lt; 64; i++)
{
    xx[i] = i * 12;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -y + 1000;

if(!surface_exists(surf)) surf = surface_create(view_wview , view_hview);
if(!surface_exists(surfMask)) surfMask = surface_create(view_wview , view_hview);
if(!surface_exists(surfHelper)) surfHelper = surface_create(view_wview , view_hview);
if(!surface_exists(surfStraight)) surfStraight = surface_create(view_wview , view_hview);

for(i = 0; i &lt; 64; i++)
{
    xx[i] -= 3;
    if(xx[i] &lt; 0) xx[i] += 360;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(surface_exists(surf) &amp;&amp; surface_exists(surfMask) &amp;&amp; surface_exists(surfHelper))
{
    surface_set_target(surfHelper);
    draw_clear_alpha(c_black, 0);
    for(i = 0; i &lt; instance_number(Water); i++)
    {
        cur = instance_find(Water, i);
        draw_sprite_ext(sprWater, cur.image_index, cur.x - view_xview , cur.y - view_yview, 1, 1, 0, c_white, 1);
    }
    surface_reset_target();
    
    surface_set_target(surfMask);
    draw_clear(c_black);
    draw_set_blend_mode(bm_subtract);
    draw_surface(surfHelper, 0, 0);
    draw_set_blend_mode(bm_normal);
    surface_reset_target();
    
    surface_set_target(surfStraight);
    draw_clear_alpha(c_black, 0);
    draw_set_colour($7ec0ee);
    draw_set_alpha(1 - Ctrl.sunlight);
    draw_rectangle(0, 0, surface_get_width(surfStraight), surface_get_height(surfStraight), false);
    draw_sprite(sprNightSky, 0, 0, 0);
    draw_set_alpha(1);
    
    if(Ctrl.suny &lt; 0) draw_sprite(sprSun, 0, view_wview/2 + Ctrl.sunx*800 , view_hview/2 - Ctrl.suny*128);
    if(Ctrl.suny &gt; 0) draw_sprite(sprMoon, 0, view_wview/2 - Ctrl.sunx*800 , view_hview/2 + Ctrl.suny*128);
    
    for(i = 0; i &lt; 3; i++)
    {
        draw_sprite_ext(sprCloud, Ctrl.cloud[i, 2], Ctrl.cloud[i, 0] , Ctrl.cloud[i, 1], Ctrl.cloud[i, 3], Ctrl.cloud[i, 4], 0, $eeeeee, 1);
        draw_sprite_ext(sprCloud, Ctrl.cloud[i, 2], Ctrl.cloud[i, 0] , Ctrl.cloud[i, 1], Ctrl.cloud[i, 3], Ctrl.cloud[i, 4], 0, $aaaaaa, (1 - Ctrl.sunlight));
    }
    draw_set_colour(make_colour_rgb(120, 120, 120));
    draw_set_alpha(Ctrl.overcast*0.9);
    draw_rectangle(0, 0, surface_get_width(surfStraight), surface_get_height(surfStraight), false);
    draw_set_alpha(1);
    
    for(i = 0; i &lt; instance_number(Tree); i++)
    {
        cur = instance_find(Tree, i);
        draw_sprite_ext(sprTreeS, 1, cur.x - view_xview , cur.y - view_yview + 160, cur.scale, cur.scale*0.5, 0, make_colour_rgb(0, 20, 40), 1);
        draw_sprite_ext(sprTreeS, 1, cur.x - view_xview , cur.y - view_yview + 160, -cur.scale, cur.scale*-0.5, 0, make_colour_rgb(0, 20, 40), 1);
    }
    
    for(i = 0; i &lt; instance_number(BattleParent); i++)
    {
        cur = instance_find(BattleParent, i);
        draw_sprite_ext(sprHeroReflection, 0, cur.x - view_xview , cur.y - view_yview, 1, -1, 0, make_colour_rgb(0, 20, 40), 1);
    }
    
    surface_reset_target();
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    
    for(i = 0; i &lt; 64; i++)
    {
        draw_surface_part(surfStraight, 0, i * surface_get_height(surfStraight)/64, surface_get_width(surfStraight), surface_get_height(surfStraight)/64, 4 * sin(degtorad(xx[i])), i * surface_get_height(surfStraight)/64);
    }
    
    draw_set_blend_mode(bm_subtract);
    draw_surface(surfMask, 0, 0);
    draw_set_blend_mode(bm_normal);
    
    surface_reset_target();
    
    draw_surface(surf, view_xview, view_yview);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
